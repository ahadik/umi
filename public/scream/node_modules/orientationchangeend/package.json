{
  "name": "orientationchangeend",
  "description": "The orientationchangeend event is fired when the orientation of the device has changed and the associated rotation animation has been complete.",
  "keywords": [
    "orientationchangeend",
    "orientationchange"
  ],
  "version": "1.1.2",
  "main": "src/orientationchangeend.js",
  "author": {
    "name": "Gajus Kuizinas",
    "email": "gk@anuary.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/gajus/orientationchangeend"
  },
  "license": "BSD-3-Clause",
  "devDependencies": {
    "del": "^0.1.3",
    "gulp": "^3.8.9",
    "gulp-browserify": "^0.5.0",
    "gulp-header": "^1.2.2",
    "gulp-jshint": "^1.8.5",
    "gulp-mocha": "^1.1.1",
    "gulp-rename": "^1.2.0",
    "gulp-uglify": "^1.0.1",
    "jsonfile": "^2.0.0"
  },
  "dependencies": {
    "sister": "^3.0.0"
  },
  "readme": "# `orientationchangeend`\n\n<!--[![Build Status](https://travis-ci.org/gajus/orientationchangeend.png?branch=master)](https://travis-ci.org/gajus/orientationchangeend)-->\n[![NPM version](https://badge.fury.io/js/orientationchangeend.svg)](http://badge.fury.io/js/orientationchangeend)\n[![Bower version](https://badge.fury.io/bo/orientationchangeend.svg)](http://badge.fury.io/bo/orientationchangeend)\n\nThe `orientationchangeend` event is fired when the orientation of the device has changed and the associated rotation animation has been complete. `orientationchangeend` enables you to [capture dimensions](http://stackoverflow.com/questions/12452349/mobile-viewport-height-after-orientation-change) of the element in the state after the rotation change.\n\n## The Underlying Implementation\n\nThere is no way to capture the end of the orientation change event because handling of the orientation change varies from browser to browser. Drawing a balance between the most reliable and the fastest way to detect the end of orientation change requires racing interval and timeout.\n\nA listener is attached to the `orientationchange`. Invoking the listener starts an interval. The interval is tracking the state of `window.innerWidth` and `window.innerHeight`. The `orientationchangeend` event is fired when `config.noChangeCountToEnd` number of consequent iterations do not detect a value mutation or after `config.noEndTimeout` milliseconds, whichever happens first.\n\nIf there is a series of `orientationchange` events fired one after another, where `n` event `orientationchangeend` event has not been fired before the `n+2` `orientationchange`, then `orientationchangeend` will fire only for the last `orientationchange` event in the series.\n\n## Usage\n\n```js\nvar config = {},\n    OCE;\n\n// Start tracking the orientation change.\nOCE = gajus.orientationchangeend(config);\n\n// Attach event listener to the \"orientationchangeend\" event.\nOCE.on('orientationchangeend', function () {\n    // The orientation have changed.\n});\n```\n\nTo make the `orientationchangeend` event available to the `window`, re-emit the event using a [custom event](https://developer.mozilla.org/en/docs/Web/API/CustomEvent):\n\n```js\nvar orientationchangeend;\n\n// Make sure that you are not adding event emitter more than once.\nif ('onorientationchangeend' in window) {\n    window.onorientationchangeend = true;\n\n    orientationchangeend = new CustomEvent('orientationchangeend');\n\n    OCE.on('orientationchangeend', function () {\n        window.dispatchEvent(orientationchangeend);\n    })\n}\n\n// Attach a listener to the \"orientationchangeend\" event.\nwindow.addEventListener('orientationchangeend', function () {\n    console.log('The orientation of the device is now ' + window.orientation);\n});\n```\n\n## Configuration\n\n| Name | Value | Default |\n| --- | --- | --- |\n| `noChangeCountToEnd` | Number of iterations the subject of interval inspection must not mutate to fire `orientationchangeend`. | `100` |\n| `noEndTimeout` | Number of milliseconds after which fire the `orientationchangeend` if interval inspection did not do it before. | `1000` |\n| `debug` | Enables logging of the events | `false` |\n\nAll of the configuration parameters are optional.\n\n## Download\n\nUsing [Bower](http://bower.io/):\n\n```sh\nbower install orientationchangeend\n```\n\nUsing [NPM](https://www.npmjs.org/):\n\n```sh\nnpm install orientationchangeend\n```\n\nThe old-fashioned way, download either of the following files:\n\n* https://raw.githubusercontent.com/gajus/orientationchangeend/master/dist/orientationchangeend.js\n* https://raw.githubusercontent.com/gajus/orientationchangeend/master/dist/orientationchangeend.min.js",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/gajus/orientationchangeend/issues"
  },
  "homepage": "https://github.com/gajus/orientationchangeend",
  "_id": "orientationchangeend@1.1.2",
  "_shasum": "8b103cc440dff1d7ccb552d06318ef1817ea6b1c",
  "_from": "orientationchangeend@^1.1.2",
  "_resolved": "https://registry.npmjs.org/orientationchangeend/-/orientationchangeend-1.1.2.tgz"
}
